package logger // import "github.com/tappoy/logger"

This golang package provides these features:

Logging to each level files. The files are below:

  - error.log: Error messages. Must be watched by the administrator.
  - notice.log: Messages that are not error but should be noted. Should be
    watched by the administrator.
  - info.log: Normal activity messages. Not necessary to be watched but helpful
    for the operation.
  - debug.log: Debug messages. For developers to debug. Should turn off in
    production.

Debug output can be turned on if debug.log exists. if not exists, debug output
is turned off.

Log rotation. The log files are rotated when date changes.

    ex) error.log -> backup/error_2024-04-09.log

If there is over 30 files in backup directory, the oldest file is deleted.

Output logs in LTSV format.

    datetime:YYYY-MM-DD HH:MM:SS\tLEVEL:LOG_MESSAGE\n

Output example:

    datetime:2024-04-05 20:37:04	error:message    // error.log
    datetime:2024-04-05 20:37:04	notice:message   // notice.log
    datetime:2024-04-05 20:37:04	info:message     // info.log
    datetime:2024-04-05 20:37:04	debug:message    // debug.log

VARIABLES

var (
	// Cannot create log directory.
	ErrCannotCreateLogDir = errors.New("ErrCannotCreateLogDir")

	// Cannot create log file.
	ErrCannotCreateLogFile = errors.New("ErrCannotCreateLogFile")

	// Cannot write log file.
	ErrCannotWriteLogFile = errors.New("ErrCannotWriteLogFile")
)

TYPES

type Logger struct {
	// Has unexported fields.
}

func NewLogger(logDir string) (*Logger, error)
    Create new logger.

func (logger *Logger) Debug(format string, args ...interface{})
    Log debug message.

func (logger *Logger) Error(format string, args ...interface{})
    Log error message.

func (logger *Logger) GetLogDir() string
    Get log directory.

func (logger *Logger) Info(format string, args ...interface{})
    Log info message.

func (logger *Logger) Notice(format string, args ...interface{})
    Log notice message.

